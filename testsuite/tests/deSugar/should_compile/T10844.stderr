[1 of 2] Compiling T10844a          ( T10844a.hs, T10844a.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 65, types: 53, coercions: 9}

-- RHS size: {terms: 3, types: 3, coercions: 2}
foo [InlPrag=INLINE] :: forall a. Foo a => a -> a
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=DmdType <S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=True)
         Tmpl= \ (@ a) (tpl [Occ=Once] :: Foo a) ->
                 tpl `cast` (T10844a.NTCo:Foo[0] <a>_N :: Foo a ~R# (a -> a))}]
foo =
  \ (@ a) (tpl :: Foo a) ->
    tpl `cast` (T10844a.NTCo:Foo[0] <a>_N :: Foo a ~R# (a -> a))

-- RHS size: {terms: 2, types: 0, coercions: 0}
T10844a.$fFooInt11 :: [Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 50 0}]
T10844a.$fFooInt11 = unpackCString# "error"#

-- RHS size: {terms: 2, types: 0, coercions: 0}
T10844a.$fFooInt10 :: [Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 40 0}]
T10844a.$fFooInt10 = unpackCString# "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0}
T10844a.$fFooInt9 :: [Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 50 0}]
T10844a.$fFooInt9 = unpackCString# "T10844a"#

-- RHS size: {terms: 2, types: 0, coercions: 0}
T10844a.$fFooInt8 :: [Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 60 0}]
T10844a.$fFooInt8 = unpackCString# "./T10844a.hs"#

-- RHS size: {terms: 2, types: 0, coercions: 0}
T10844a.$fFooInt7 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T10844a.$fFooInt7 = I# 6#

-- RHS size: {terms: 2, types: 0, coercions: 0}
T10844a.$fFooInt6 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T10844a.$fFooInt6 = I# 13#

-- RHS size: {terms: 2, types: 0, coercions: 0}
T10844a.$fFooInt5 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T10844a.$fFooInt5 = I# 18#

-- RHS size: {terms: 8, types: 0, coercions: 0}
T10844a.$fFooInt4 :: SrcLoc
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 80}]
T10844a.$fFooInt4 =
  SrcLoc
    T10844a.$fFooInt10
    T10844a.$fFooInt9
    T10844a.$fFooInt8
    T10844a.$fFooInt7
    T10844a.$fFooInt6
    T10844a.$fFooInt7
    T10844a.$fFooInt5

-- RHS size: {terms: 3, types: 3, coercions: 0}
T10844a.$fFooInt3 :: ([Char], SrcLoc)
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
T10844a.$fFooInt3 = (T10844a.$fFooInt11, T10844a.$fFooInt4)

-- RHS size: {terms: 3, types: 8, coercions: 0}
T10844a.$fFooInt2 :: [([Char], SrcLoc)]
[GblId,
 Str=DmdType m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
T10844a.$fFooInt2 =
  : @ ([Char], SrcLoc) T10844a.$fFooInt3 ([] @ ([Char], SrcLoc))

-- RHS size: {terms: 2, types: 0, coercions: 0}
T10844a.$fFooInt1 :: CallStack
[GblId,
 Str=DmdType m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
T10844a.$fFooInt1 = CallStack T10844a.$fFooInt2

-- RHS size: {terms: 2, types: 0, coercions: 0}
lvl :: [Char]
[GblId, Str=DmdType]
lvl = unpackCString# "foo"#

-- RHS size: {terms: 3, types: 1, coercions: 4}
lvl1 :: Int
[GblId, Str=DmdType b]
lvl1 =
  error
    @ Int
    (T10844a.$fFooInt1
     `cast` (Sym (NTCo:IP[0] <"callStack">_N <CallStack>_N)
             :: CallStack ~R# (?callStack::CallStack)))
    lvl

-- RHS size: {terms: 10, types: 4, coercions: 0}
T10844a.$fFooInt_$cfoo [InlPrag=INLINE (sat-args=1)] :: Int -> Int
[GblId,
 Arity=1,
 Str=DmdType <S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=False)
         Tmpl= \ (ds [Occ=Once!] :: Int) ->
                 case ds of wild { I# ds1 [Occ=Once!] ->
                 case ds1 of _ [Occ=Dead] {
                   __DEFAULT -> wild;
                   0# ->
                     error
                       @ Int
                       (T10844a.$fFooInt1
                        `cast` (Sym (NTCo:IP[0] <"callStack">_N <CallStack>_N)
                                :: CallStack ~R# (?callStack::CallStack)))
                       (build @ Char (\ (@ b) -> unpackFoldrCString# @ b "foo"#))
                 }
                 }}]
T10844a.$fFooInt_$cfoo =
  \ (eta :: Int) ->
    case eta of wild { I# ds ->
    case ds of _ [Occ=Dead] {
      __DEFAULT -> wild;
      0# -> lvl1
    }
    }

-- RHS size: {terms: 1, types: 0, coercions: 3}
T10844a.$fFooInt [InlPrag=INLINE (sat-args=0)] :: Foo Int
[GblId[DFunId(nt)],
 Arity=1,
 Str=DmdType <S(S),1*U(U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=False,boring_ok=True)
         Tmpl= T10844a.$fFooInt_$cfoo
               `cast` (Sym (T10844a.NTCo:Foo[0] <Int>_N)
                       :: (Int -> Int) ~R# Foo Int)}]
T10844a.$fFooInt =
  T10844a.$fFooInt_$cfoo
  `cast` (Sym (T10844a.NTCo:Foo[0] <Int>_N)
          :: (Int -> Int) ~R# Foo Int)



[2 of 2] Compiling T10844           ( T10844.hs, T10844.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 36, types: 28, coercions: 7}

-- RHS size: {terms: 2, types: 0, coercions: 0}
n [InlPrag=NOINLINE] :: Int
[GblId, Caf=NoCafRefs, Str=DmdType m]
n = I# 0#

-- RHS size: {terms: 2, types: 0, coercions: 0}
T10844.main3 :: [Char]
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 40 0}]
T10844.main3 = unpackCString# "foo"#

-- RHS size: {terms: 20, types: 14, coercions: 4}
T10844.main2 :: String
[GblId,
 Str=DmdType,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 120 30}]
T10844.main2 =
  case n of _ [Occ=Dead] { I# ds1 ->
  case ds1 of ds2 {
    __DEFAULT ->
      case GHC.Show.$wshowSignedInt 0# ds2 ([] @ Char)
      of _ [Occ=Dead] { (# ww5, ww6 #) ->
      : @ Char ww5 ww6
      };
    0# ->
      case error
             @ Int
             (T10844a.$fFooInt1
              `cast` (Sym (NTCo:IP[0] <"callStack">_N <CallStack>_N)
                      :: CallStack ~R# (?callStack::CallStack)))
             T10844.main3
      of wild1 {
      }
  }
  }

-- RHS size: {terms: 6, types: 2, coercions: 0}
T10844.main1 :: State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=1,
 Str=DmdType <L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 40 0}]
T10844.main1 =
  \ (eta [OS=OneShot] :: State# RealWorld) ->
    hPutStr2 stdout T10844.main2 True eta

-- RHS size: {terms: 1, types: 0, coercions: 3}
main :: IO ()
[GblId,
 Arity=1,
 Str=DmdType <L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= T10844.main1
               `cast` (Sym (NTCo:IO[0] <()>_R)
                       :: (State# RealWorld -> (# State# RealWorld, () #)) ~R# IO ())}]
main =
  T10844.main1
  `cast` (Sym (NTCo:IO[0] <()>_R)
          :: (State# RealWorld -> (# State# RealWorld, () #)) ~R# IO ())


------ Local rules for imported ids --------
"SPEC/T10844 foo @ Int" [ALWAYS]
    forall (tpl :: Foo Int). foo @ Int tpl = T10844a.$fFooInt_$cfoo


