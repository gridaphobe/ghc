
==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 37, types: 22, coercions: 0, joins: 0/0}

-- RHS size: {terms: 22, types: 15, coercions: 0, joins: 0/0}
main :: IO ()
[GblId]
main
  = >>
      @ IO
      GHC.Base.$fMonadIO
      @ ()
      @ ()
      (putStrLn (unpackCString# "c"#))
      (>>
         @ IO
         GHC.Base.$fMonadIO
         @ ()
         @ ()
         (putStrLn (unpackCString# "x"#))
         (>>
            @ IO
            GHC.Base.$fMonadIO
            @ ()
            @ ()
            (putStrLn (unpackCString# "z"#))
            (>>
               @ IO
               GHC.Base.$fMonadIO
               @ ()
               @ ()
               (putStrLn (unpackCString# "efg"#))
               (Control.Exception.Base.patError
                  @ 'LiftedRep @ (IO ()) "T9400.hs:(17,5)-(18,29)|case"#))))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
ds :: Addr#
[GblId, Caf=NoCafRefs]
ds = "T9400"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
ds1 :: Addr#
[GblId, Caf=NoCafRefs]
ds1 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule1 :: TrName
[GblId, Caf=NoCafRefs]
$trModule1 = GHC.Types.TrNameS ds1

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$trModule2 :: TrName
[GblId, Caf=NoCafRefs]
$trModule2 = GHC.Types.TrNameS ds

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
T9400.$trModule :: Module
[GblId, Caf=NoCafRefs]
T9400.$trModule = GHC.Types.Module $trModule1 $trModule2



